@mixin bp($point, $val: 0) {

	@if $point == m { // Medium
		@media (min-width: 780px) { @content; }
	}

	@if $point == l { // Large
		@media (min-width: 1024px) { @content; }
	}

	@if $point == xl { // Large
		@media (min-width: 1200px) { @content; }
	}

	@if $point == wildcard-min { // Uses variable breakpoint.
		@media (min-width: #{$val}) { @content; }
	}

	@if $point == wildcard-max { // Uses variable breakpoint.
		@media (max-width: #{$val}) { @content; }
	}

	// @if $point == highres {
	// 	@media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3 / 2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-devicepixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) { @content; }
	// }

	@if $point == print {
		@media only print { @content; }
	}

}

@mixin em_width($px, $default: $fontsize) { width: #{$px / $default}em; }
@mixin em_height($px, $default: $fontsize) { height: #{$px / $default}em; }
@mixin em_maxwidth($px, $default: $fontsize) { max-width: #{$px / $default}em; }
@mixin em_minwidth($px, $default: $fontsize) { min-width: #{$px / $default}em; }
@mixin em_maxheight($px, $default: $fontsize) { max-height: #{$px / $default}em; }
@mixin em_minheight($px, $default: $fontsize) { min-height: #{$px / $default}em; }
@mixin em_margin($top:0,$right:0,$bot:$top,$left:$right, $default: $fontsize) { margin: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em }
@mixin em_padding($top:0,$right:0,$bot:$top,$left:$right, $default: $fontsize) { padding: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em }
@mixin em_fontsize($px) { font-size: #{$px / $fontsize}em; }
@mixin em_lineheight($px, $default: $fontsize) { line-height: #{$px / $default}em; }

@mixin box_shadow($hoffset: 0, $voffset: 0, $blur: 0, $spread: 0, $color: $black, $inset: false) {

	@if $inset == false {
		-webkit-box-shadow: $hoffset $voffset $blur $spread $color;
		box-shadow: $hoffset $voffset $blur $spread $color;
	} @else {
		-webkit-box-shadow: inset $hoffset $voffset $blur $spread $color;
		box-shadow: inset $hoffset $voffset $blur $spread $color;
	}

}

@mixin vendorize($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin opacity($i) {
	$forie: $i * 100;

	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity="+$forie+")";
	filter: alpha(opacity=$forie);
	opacity: $i;
}

@mixin transition($sel: all,$time: 1s,$ease: linear) {
	-webkit-transition: $sel $time $time;
	-moz-transition: $sel $time $time;
	-o-transition: $sel $time $time;
	-ms-transition: $sel $time $time;
	transition: $sel $time $time;
}

//Headings
@mixin main_heading($weight: 800) {
	margin-top: 16px;
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 40px;
	@if type-of($weight) == string {
		font-weight: unquote($weight);
	} @else {
		font-weight: $weight;
	}
	line-height: 48px;
}

@mixin sub_heading($weight: 800) {
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 32px;
	@if type-of($weight) == string {
		font-weight: unquote($weight);
	} @else {
		font-weight: $weight;
	}
	line-height: 40px;
}

@mixin section_heading($weight: 800) {
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 24px;
	@if type-of($weight) == string {
		font-weight: unquote($weight);
	} @else {
		font-weight: $weight;
	}
	line-height: 32px;
	letter-spacing: .8;
}

@mixin sub_section_heading($weight: 800) {
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 18px;
	@if type-of($weight) == string {
		font-weight: unquote($weight);
	} @else {
		font-weight: $weight;
	}
	line-height: 24px;
}

@mixin content_heading($weight: 800) {
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 14px;
	@if type-of($weight) == string {
		font-weight: unquote($weight);
	} @else {
		font-weight: $weight;
	}
	line-height: 18px;
}

@mixin content_label() {
	font-family: "proxima-nova", "Helvetica Neue", "Microsoft Sans Serif", sans-serif;
	font-size: 10px;
	font-weight: 800;
	color: #9B9B9B;
	line-height: 12px;
	text-transform: uppercase;
}

//Paragraphs
@mixin paragraph() {
	font-size: 14px;
	line-height: 20px;
	margin:0 0 10px 0;
	font-weight: 400;
}

@mixin p_small() {
	margin-top: 24px;
	font-family: "proxima-nova-soft", "proxima-nova", "futura-pt", Arial, Verdana, "Sans Serif";
	font-size: 12px;
	font-weight: 400;
	line-height: 18px;
}

@mixin hyperlinks() {
	margin-top: 14px;
	line-height: 14px;
}

@mixin fluid-width-video-container() {
	position: relative;
	padding-bottom: 56.25%; /* 16:9 */
	height: 0;

	& iframe {
		position: absolute;
		top: 0;
		left: 0;
		width: 100% !important;
		height: 100% !important;
	}
}
@mixin aspect_ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	img {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

@mixin box-shadow {
	box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.3);
}

@mixin button($bg-color: $red, $text-color: white) {
	display: inline-block;
	padding: $base-spacing / 2 $base-spacing;
	font-size: 16px;
	border-radius: 3px;
	background: $bg-color;
	color: $text-color;
	cursor: pointer;
	border: none;
	@include box-shadow;

	&:hover, &:focus {
		outline: none;
		background-color: lighten($bg-color, 5%);
		@include transition(background-color);
	}

	&:active {
		transition: none;
		background-color: darken($bg-color, 5%);
	}
}

@mixin transition($property) {
	transition: $property 150ms;
}

@mixin ellipsis {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin form-control-focus($color) {
  $color-rgba:   rgba(red($color), green($color), blue($color), 0.6);
  $border-color: rgba(red($color), green($color), blue($color), 0.8);
  &:focus, &:active {
    border-color: $border-color;
    outline: 0;
    box-shadow: 0 0 5px $color-rgba;
  }
}

@mixin theme-color-classes($primary, $secondary) {
	.theme-primary-bg { background-color: $primary; }
	.theme-secondary-bg { background-color: $secondary; }
	// Identify more items like this to create for themeing the templates.
	// .theme-content {}
	// .theme-button {}
}